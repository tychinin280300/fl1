{"version":3,"sources":["components/header.tsx","components/sidePanel.tsx","services/api.ts","components/workSpace.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","position","width","backgroundColor","palette","primary","main","color","common","white","title","fontSize","typography","h4","padding","authButton","top","right","HeaderContainer","classes","Box","className","IconButton","AccountCircle","input","margin","dndItemDimension","borderWidth","borderRadius","borderStyle","cursor","info","light","borderColor","dark","dndItemMeasure","success","DraggableItem","memo","props","useDrag","type","item","name","id","key_","collect","monitor","opacity","isDragging","drag","ref","style","found","fontWeight","SidePanelContainer","useState","searchValue","setSearchValue","FormControl","fullWidth","InputLabel","Input","value","onChange","event","target","endAdornment","InputAdornment","onClick","Clear","Object","entries","tables","map","index","key","isKeyFound","indexOf","isInnerFound","undefined","find","row","Accordion","AccordionSummary","expandIcon","ArrowDropDown","AccordionDetails","isFound","getAllTables","a","table1","table2","caption","text","disabled","borderBottom","box","marginTop","minHeight","DropBox","useDrop","accept","drop","onDrop","isOver","canDrop","isActive","Paper","elevation","items","WorkSpaceContainer","filters","columns","rows","measures","dustbin","setDustbin","handleDrop","bin","itm","Button","variant","fontFamily","App","allTables","setAllTables","useEffect","then","response","isHidden","setIsHidden","Grid","container","xs","ChevronRight","ChevronLeft","ReactDOM","render","DndProvider","backend","HTML5Backend","document","getElementById"],"mappings":"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","file":"static/js/main.12c4ab06.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, IconButton, makeStyles } from \"@material-ui/core\";\nimport { AccountCircle } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    width: \"100%\",\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n  },\n  title: {\n    fontSize: theme.typography.h4.fontSize,\n    padding: \"10px\",\n  },\n  authButton: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    color: theme.palette.common.white,\n  },\n}));\n\nconst HeaderContainer: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.title}>Olap online</Box>\n      <IconButton className={classes.authButton}>\n        <AccountCircle fontSize=\"large\" />\n      </IconButton>\n    </Box>\n  );\n};\n\nexport default HeaderContainer;\n","import React, { memo, useState } from \"react\";\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  FormControl,\n  IconButton,\n  Input,\n  InputAdornment,\n  InputLabel,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { ArrowDropDown, Clear } from \"@material-ui/icons\";\nimport { Table } from \"../services/api\";\nimport \"./sidePanel.css\";\nimport { useDrag } from \"react-dnd\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    margin: \"5px\",\n  },\n  dndItemDimension: {\n    borderWidth: \"1px\",\n    borderRadius: \"3px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    margin: \"5px\",\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.info.light,\n    borderColor: theme.palette.info.dark,\n  },\n  dndItemMeasure: {\n    borderWidth: \"1px\",\n    borderRadius: \"3px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    margin: \"5px\",\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.success.light,\n    borderColor: theme.palette.success.dark,\n  },\n}));\n\ntype SidePanelProps = {\n  tables: Record<string, Table>;\n};\n\nconst DraggableItem: React.FC<{\n  name: string;\n  type: \"dimension\" | \"measure\";\n  key_: string;\n  found: boolean;\n}> = memo(function Itm(props) {\n  const classes = useStyles();\n\n  const [{ opacity }, drag] = useDrag(\n    () => ({\n      type: props.type,\n      item: { name: props.name, type: props.type, id: props.key_ },\n      collect: (monitor) => ({\n        opacity: monitor.isDragging() ? 0.4 : 1,\n      }),\n    }),\n    [props.key_, props.name]\n  );\n\n  return (\n    <div\n      ref={drag}\n      style={props.found ? { opacity, fontWeight: \"bold\" } : { opacity }}\n      className={\n        props.type === \"dimension\"\n          ? classes.dndItemDimension\n          : classes.dndItemMeasure\n      }\n    >\n      {props.name}\n    </div>\n  );\n});\n\nconst SidePanelContainer: React.FC<SidePanelProps> = (props) => {\n  const classes = useStyles();\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  return (\n    <Box>\n      <FormControl className={classes.input} fullWidth={true}>\n        <InputLabel>Поиск</InputLabel>\n        <Input\n          value={searchValue}\n          onChange={(event) => setSearchValue(event.target.value)}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton onClick={() => setSearchValue(\"\")}>\n                <Clear />\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <Box>\n        {Object.entries(props.tables).map(([key, value], index) => {\n          const isKeyFound =\n            key.indexOf(searchValue) > -1 && searchValue !== \"\";\n          const isInnerFound =\n            value.find(\n              (row) => row.name.indexOf(searchValue) > -1 && searchValue !== \"\"\n            ) !== undefined;\n          return (\n            (isKeyFound || isInnerFound || searchValue === \"\") && (\n              <Accordion key={index}>\n                <AccordionSummary\n                  expandIcon={\n                    <ArrowDropDown\n                      fontSize=\"large\"\n                      color={isInnerFound ? \"secondary\" : undefined}\n                    />\n                  }\n                  style={isKeyFound ? { fontWeight: \"bold\" } : undefined}\n                >\n                  {key}\n                </AccordionSummary>\n                <AccordionDetails>\n                  {value.map((row) => {\n                    const isFound =\n                      row.name.indexOf(searchValue) > -1 && searchValue !== \"\";\n                    return (\n                      <DraggableItem\n                        key={row.id}\n                        key_={row.id}\n                        type={row.type}\n                        name={row.name}\n                        found={isFound}\n                      />\n                    );\n                  })}\n                </AccordionDetails>\n              </Accordion>\n            )\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default SidePanelContainer;\n","const insertHost = (link: string): string => {\n  return \"HOSTNAME\" + link;\n};\n\nexport type Row = {\n  name: string;\n  type: \"dimension\" | \"measure\";\n  id: string;\n};\n\nexport type Table = Row[];\n\nexport const getAllTables = async (): Promise<Record<string, Table>> => {\n  return {\n    table1: [\n      { name: \"column1\", type: \"dimension\", id: \"id1\" },\n      { name: \"column2\", type: \"measure\", id: \"id2\" },\n    ],\n    table2: [\n      { name: \"column3\", type: \"dimension\", id: \"id3\" },\n      { name: \"column4\", type: \"measure\", id: \"id4\" },\n      { name: \"column5\", type: \"dimension\", id: \"id5\" },\n      { name: \"column6\", type: \"measure\", id: \"id6\" },\n    ],\n  };\n};\n","import React, { memo, useState } from \"react\";\nimport { Row } from \"../services/api\";\nimport { Box, Button, makeStyles, Paper } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"15px\",\n  },\n  caption: {\n    padding: \"5px\",\n    backgroundColor: theme.palette.text.disabled,\n    borderBottom: \"1px solid black\",\n  },\n  box: {\n    width: \"500px\",\n    marginTop: \"10px\",\n    minHeight: \"150px\",\n  },\n  dndItemDimension: {\n    borderWidth: \"1px\",\n    borderRadius: \"3px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    margin: \"5px\",\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.info.light,\n    borderColor: theme.palette.info.dark,\n  },\n  dndItemMeasure: {\n    borderWidth: \"1px\",\n    borderRadius: \"3px\",\n    borderStyle: \"solid\",\n    padding: \"5px\",\n    margin: \"5px\",\n    cursor: \"pointer\",\n    backgroundColor: theme.palette.success.light,\n    borderColor: theme.palette.success.dark,\n  },\n}));\n\nconst DropBox: React.FC<{\n  name: string;\n  accept: string[];\n  onDrop: (item: Row) => void;\n  items: Row[];\n}> = memo(function DrpBx(props) {\n  const classes = useStyles();\n\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept: props.accept,\n    drop: props.onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n\n  const isActive = isOver && canDrop;\n\n  return (\n    <Paper\n      ref={drop}\n      elevation={3}\n      className={classes.box}\n      style={isActive ? { backgroundColor: \"lightyellow\" } : undefined}\n    >\n      <Box className={classes.caption}>{props.name}</Box>\n      {props.items.map((item, index) => (\n        <Box\n          key={index}\n          className={\n            item.type === \"dimension\"\n              ? classes.dndItemDimension\n              : classes.dndItemMeasure\n          }\n        >\n          {item.name}\n        </Box>\n      ))}\n    </Paper>\n  );\n});\n\nconst WorkSpaceContainer: React.FC = () => {\n  const classes = useStyles();\n\n  const [dustbin, setDustbin] = useState<{\n    filters: Row[];\n    columns: Row[];\n    rows: Row[];\n    measures: Row[];\n  }>({\n    filters: [],\n    columns: [],\n    rows: [],\n    measures: [],\n  });\n\n  const handleDrop = (\n    item: Row,\n    bin: \"filters\" | \"columns\" | \"rows\" | \"measures\"\n  ) => {\n    if (bin === \"filters\") {\n      setDustbin({ ...dustbin, filters: [...dustbin.filters, item] });\n    }\n    if (\n      bin !== \"filters\" &&\n      dustbin[bin].find((itm) => itm.id === item.id) === undefined\n    ) {\n      setDustbin({ ...dustbin, [bin]: [...dustbin[bin], item] });\n    }\n  };\n\n  return (\n    <Box className={classes.root}>\n      <Button variant=\"contained\">Загрузить</Button>\n      <DropBox\n        name=\"Фильтры\"\n        accept={[\"dimension\"]}\n        onDrop={(item: Row) => handleDrop(item, \"filters\")}\n        items={dustbin.filters}\n      />\n      <DropBox\n        name=\"Столбцы\"\n        accept={[\"dimension\"]}\n        onDrop={(item: Row) => handleDrop(item, \"columns\")}\n        items={dustbin.columns}\n      />\n      <DropBox\n        name=\"Строки\"\n        accept={[\"dimension\"]}\n        onDrop={(item: Row) => handleDrop(item, \"rows\")}\n        items={dustbin.rows}\n      />\n      <DropBox\n        name=\"Метрики\"\n        accept={[\"measure\"]}\n        onDrop={(item: Row) => handleDrop(item, \"measures\")}\n        items={dustbin.measures}\n      />\n    </Box>\n  );\n};\n\nexport default WorkSpaceContainer;\n","import React, { useEffect, useState } from \"react\";\nimport HeaderContainer from \"./components/header\";\nimport { Box, Grid, IconButton, makeStyles } from \"@material-ui/core\";\nimport SidePanelContainer from \"./components/sidePanel\";\nimport { getAllTables, Table } from \"./services/api\";\nimport WorkSpaceContainer from \"./components/workSpace\";\nimport { ChevronLeft, ChevronRight } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"roboto\",\n  },\n}));\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  const [allTables, setAllTables] = useState<null | Record<string, Table>>(\n    null\n  );\n  useEffect(() => {\n    getAllTables().then((response) => setAllTables(response));\n  }, []);\n\n  const [isHidden, setIsHidden] = useState(false);\n\n  return (\n    <Box className={classes.root}>\n      <HeaderContainer />\n      <Grid container>\n        <Grid item xs={isHidden ? 1 : 3}>\n          <IconButton onClick={() => setIsHidden(!isHidden)}>\n            {isHidden ? <ChevronRight /> : <ChevronLeft />}\n          </IconButton>\n          {allTables !== null && !isHidden ? (\n            <SidePanelContainer tables={allTables} />\n          ) : null}\n        </Grid>\n        <Grid item xs={isHidden ? 11 : 9}>\n          {allTables !== null ? (\n            <WorkSpaceContainer />\n          ) : null}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default App;\n","import \"@fontsource/roboto\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nReactDOM.render(\n    <DndProvider backend={HTML5Backend}>\n      <App />\n    </DndProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}